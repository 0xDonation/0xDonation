/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Donation, DonationInterface } from "../../contracts/Donation";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "donateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "donorName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "speakerId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "artist",
        type: "address",
      },
    ],
    name: "Donated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "donateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "artist",
        type: "address",
      },
      {
        internalType: "string",
        name: "donateMessage",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageUrl",
        type: "string",
      },
      {
        internalType: "string",
        name: "donorName",
        type: "string",
      },
      {
        internalType: "string",
        name: "speakerId",
        type: "string",
      },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeFundSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllDonates",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "withdrawDonates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111ef806100206000396000f3fe6080604052600436106100915760003560e01c8063dc708e0f11610059578063dc708e0f14610136578063ddca3f4314610152578063e941fa781461017d578063f2fde38b14610194578063fe4b84df146101bd57610091565b806343be51dd14610096578063715018a6146100a05780638652ae8b146100b75780638da5cb5b146100e2578063ae8f3fcd1461010d575b600080fd5b61009e6101e6565b005b3480156100ac57600080fd5b506100b561022f565b005b3480156100c357600080fd5b506100cc610243565b6040516100d99190610a92565b60405180910390f35b3480156100ee57600080fd5b506100f7610255565b6040516101049190610aee565b60405180910390f35b34801561011957600080fd5b50610134600480360381019061012f9190610b49565b61028d565b005b610150600480360381019061014b9190610ce8565b6103ab565b005b34801561015e57600080fd5b506101676104a4565b6040516101749190610a92565b60405180910390f35b34801561018957600080fd5b506101926104aa565b005b3480156101a057600080fd5b506101bb60048036038101906101b69190610de5565b610515565b005b3480156101c957600080fd5b506101e460048036038101906101df9190610b49565b61059b565b005b61022d6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461028d565b565b610237610731565b61024160006107b8565b565b600061024d610731565b600254905090565b60008061026061088f565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6102956108b7565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d90610e95565b60405180910390fd5b60008111610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035090610f01565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561039f573d6000803e3d6000fd5b506103a861090e565b50565b6103e86001546103e86103be9190610f50565b346103c99190610f84565b6103d39190610ff5565b6000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104209190611026565b925050819055506103e8600154346104389190610f84565b6104429190610ff5565b600260008282546104539190611026565b92505081905550857fc1b340eb09c319225d0fb05bd26d03aebac6262c8ef1424b12f290cbafdae3bb34868686868b604051610494969594939291906110c8565b60405180910390a2505050505050565b60015481565b6104b2610731565b6104ba6108b7565b3373ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015610502573d6000803e3d6000fd5b50600060028190555061051361090e565b565b61051d610731565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361058f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105869190610aee565b60405180910390fd5b610598816107b8565b50565b60006105a5610927565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156105f35750825b9050600060018367ffffffffffffffff16148015610628575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610636575080155b1561066d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106bd5760018560000160086101000a81548160ff0219169083151502179055505b856001819055506106cd3361094f565b83156107295760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610720919061119e565b60405180910390a15b505050505050565b610739610963565b73ffffffffffffffffffffffffffffffffffffffff16610757610255565b73ffffffffffffffffffffffffffffffffffffffff16146107b65761077a610963565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107ad9190610aee565b60405180910390fd5b565b60006107c261088f565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b60006108c161096b565b90506002816000015403610901576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002816000018190555050565b600061091861096b565b90506001816000018190555050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610957610993565b610960816109d3565b50565b600033905090565b60007f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b61099b610a59565b6109d1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6109db610993565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a449190610aee565b60405180910390fd5b610a56816107b8565b50565b6000610a63610927565b60000160089054906101000a900460ff16905090565b6000819050919050565b610a8c81610a79565b82525050565b6000602082019050610aa76000830184610a83565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ad882610aad565b9050919050565b610ae881610acd565b82525050565b6000602082019050610b036000830184610adf565b92915050565b6000604051905090565b600080fd5b600080fd5b610b2681610a79565b8114610b3157600080fd5b50565b600081359050610b4381610b1d565b92915050565b600060208284031215610b5f57610b5e610b13565b5b6000610b6d84828501610b34565b91505092915050565b610b7f81610acd565b8114610b8a57600080fd5b50565b600081359050610b9c81610b76565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bf582610bac565b810181811067ffffffffffffffff82111715610c1457610c13610bbd565b5b80604052505050565b6000610c27610b09565b9050610c338282610bec565b919050565b600067ffffffffffffffff821115610c5357610c52610bbd565b5b610c5c82610bac565b9050602081019050919050565b82818337600083830152505050565b6000610c8b610c8684610c38565b610c1d565b905082815260208101848484011115610ca757610ca6610ba7565b5b610cb2848285610c69565b509392505050565b600082601f830112610ccf57610cce610ba2565b5b8135610cdf848260208601610c78565b91505092915050565b60008060008060008060c08789031215610d0557610d04610b13565b5b6000610d1389828a01610b34565b9650506020610d2489828a01610b8d565b955050604087013567ffffffffffffffff811115610d4557610d44610b18565b5b610d5189828a01610cba565b945050606087013567ffffffffffffffff811115610d7257610d71610b18565b5b610d7e89828a01610cba565b935050608087013567ffffffffffffffff811115610d9f57610d9e610b18565b5b610dab89828a01610cba565b92505060a087013567ffffffffffffffff811115610dcc57610dcb610b18565b5b610dd889828a01610cba565b9150509295509295509295565b600060208284031215610dfb57610dfa610b13565b5b6000610e0984828501610b8d565b91505092915050565b600082825260208201905092915050565b7f796f7520646f6e277420686176652066756e647320666f72207769746864726160008201527f7700000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e7f602183610e12565b9150610e8a82610e23565b604082019050919050565b60006020820190508181036000830152610eae81610e72565b9050919050565b7f76616c756520666f722077697468647261772073686f756c64206265203e2030600082015250565b6000610eeb602083610e12565b9150610ef682610eb5565b602082019050919050565b60006020820190508181036000830152610f1a81610ede565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f5b82610a79565b9150610f6683610a79565b9250828203905081811115610f7e57610f7d610f21565b5b92915050565b6000610f8f82610a79565b9150610f9a83610a79565b9250828202610fa881610a79565b91508282048414831517610fbf57610fbe610f21565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061100082610a79565b915061100b83610a79565b92508261101b5761101a610fc6565b5b828204905092915050565b600061103182610a79565b915061103c83610a79565b925082820190508082111561105457611053610f21565b5b92915050565b600081519050919050565b60005b83811015611083578082015181840152602081019050611068565b60008484015250505050565b600061109a8261105a565b6110a48185610e12565b93506110b4818560208601611065565b6110bd81610bac565b840191505092915050565b600060c0820190506110dd6000830189610a83565b81810360208301526110ef818861108f565b90508181036040830152611103818761108f565b90508181036060830152611117818661108f565b9050818103608083015261112b818561108f565b905061113a60a0830184610adf565b979650505050505050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061118861118361117e84611145565b611163565b61114f565b9050919050565b6111988161116d565b82525050565b60006020820190506111b3600083018461118f565b9291505056fea2646970667358221220470dd02d8ba2d777d3746083fce52eda085c6b0ee439d9824d50cb163a4164cb64736f6c63430008180033";

type DonationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Donation__factory extends ContractFactory {
  constructor(...args: DonationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Donation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Donation__factory {
    return super.connect(runner) as Donation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonationInterface {
    return new Interface(_abi) as DonationInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Donation {
    return new Contract(address, _abi, runner) as unknown as Donation;
  }
}
